// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flow codeGeneration fragment spreads with inline fragments 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroName
// ====================================================

export type HeroName_hero_Human_friends = {|
  __typename: \\"Human\\",
  name: string, // What this human calls themselves
|} | {|
  __typename: \\"Droid\\",
  id: string,   // The ID of the droid
|};

export type HeroName_hero = {|
  __typename: \\"Human\\",
  name: string,                         // What this human calls themselves
  id: string,                           // The ID of the human
  homePlanet: ?string,                  // The home planet of the human, or null if unknown
  friends: HeroName_hero_Human_friends, // This human's friends, or an empty list if they have none
|} | {|
  __typename: \\"Droid\\",
  name: string,                         // What others call this droid
  id: string,                           // The ID of the droid
  appearsIn: (?Episode)[],              // The movies this droid appears in
|};

export type HeroName = {|
  hero: HeroName_hero
|};

// ====================================================
// GraphQL fragment: humanFragment
// ====================================================

export type humanFragment_friends = {|
  __typename: \\"Human\\",
  name: string, // What this human calls themselves
|} | {|
  __typename: \\"Droid\\",
  id: string,   // The ID of the droid
|};

export type humanFragment = {|
  __typename: \\"Human\\",
  homePlanet: ?string,            // The home planet of the human, or null if unknown
  friends: humanFragment_friends, // This human's friends, or an empty list if they have none
|};

// ====================================================
// GraphQL fragment: droidFragment
// ====================================================

export type droidFragment = {|
  __typename: \\"Droid\\",
  appearsIn: (?Episode)[], // The movies this droid appears in
|};"
`;

exports[`Flow codeGeneration fragment with fragment spreads 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL fragment: simpleFragment
// ====================================================

export type simpleFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};

// ====================================================
// GraphQL fragment: anotherFragment
// ====================================================

export type anotherFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  id: string,   // The ID of the character
  name: string, // The name of the character
|};"
`;

exports[`Flow codeGeneration fragment with fragment spreads with inline fragment 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL fragment: simpleFragment
// ====================================================

export type simpleFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};

// ====================================================
// GraphQL fragment: anotherFragment
// ====================================================

export type anotherFragment_Droid = {|
  __typename: \\"Droid\\",
  id: string,   // The ID of the droid
  name: string, // What others call this droid
|};

export type anotherFragment_Human = {|
  __typename: \\"Human\\",
  id: string,              // The ID of the human
  name: string,            // What this human calls themselves
  appearsIn: (?Episode)[], // The movies this human appears in
|};

export type anotherFragment = anotherFragment_Droid | anotherFragment_Human;"
`;

exports[`Flow codeGeneration inline fragment 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroInlineFragment
// ====================================================

export type HeroInlineFragment_hero = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
  id: string,   // The ID of the character
|};

export type HeroInlineFragment = {|
  hero: HeroInlineFragment_hero
|};"
`;

exports[`Flow codeGeneration inline fragment on type conditions 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroName
// ====================================================

export type HeroName_hero_Human_friends = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};

export type HeroName_hero = {|
  __typename: \\"Human\\",
  name: string,                         // What this human calls themselves
  id: string,                           // The ID of the human
  homePlanet: ?string,                  // The home planet of the human, or null if unknown
  friends: HeroName_hero_Human_friends, // This human's friends, or an empty list if they have none
|} | {|
  __typename: \\"Droid\\",
  name: string,                         // What others call this droid
  id: string,                           // The ID of the droid
  appearsIn: (?Episode)[],              // The movies this droid appears in
|};

export type HeroName = {|
  hero: HeroName_hero
|};"
`;

exports[`Flow codeGeneration inline fragment on type conditions with differing inner fields 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroName
// ====================================================

export type HeroName_hero_Human_friends = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};

export type HeroName_hero_Droid_friends = {|
  __typename: \\"Human\\" | \\"Droid\\",
  id: string, // The ID of the character
|};

export type HeroName_hero = {|
  __typename: \\"Human\\",
  name: string,                         // What this human calls themselves
  id: string,                           // The ID of the human
  homePlanet: ?string,                  // The home planet of the human, or null if unknown
  friends: HeroName_hero_Human_friends, // This human's friends, or an empty list if they have none
|} | {|
  __typename: \\"Droid\\",
  name: string,                         // What others call this droid
  id: string,                           // The ID of the droid
  appearsIn: (?Episode)[],              // The movies this droid appears in
  friends: HeroName_hero_Droid_friends, // This droid's friends, or an empty list if they have none
|};

export type HeroName = {|
  hero: HeroName_hero
|};"
`;

exports[`Flow codeGeneration multiple files 1`] = `"/some/file/__generated__/HeroName.js"`;

exports[`Flow codeGeneration multiple files 2`] = `
"

// ====================================================
// GraphQL query operation: HeroName
// ====================================================

export type HeroName_hero = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
  id: string,   // The ID of the character
|};

export type HeroName = {|
  hero: HeroName_hero
|};

//==============================================================
// START Enums and Input Objects
// All enums and input objects are included in every output file
// for now, but this will be changed soon.
// TODO: Link to issue to fix this.
//==============================================================

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// The input object sent when someone is creating a new review
type ReviewInput = {|
  stars: number,
  commentary: ?string,
  favorite_color: ?ColorInput,
|};

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`Flow codeGeneration multiple files 3`] = `"/some/file/__generated__/SomeOther.js"`;

exports[`Flow codeGeneration multiple files 4`] = `
"

// ====================================================
// GraphQL query operation: SomeOther
// ====================================================

export type SomeOther_hero = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string,            // The name of the character
  appearsIn: (?Episode)[], // The movies this character appears in
|};

export type SomeOther = {|
  hero: SomeOther_hero
|};

//==============================================================
// START Enums and Input Objects
// All enums and input objects are included in every output file
// for now, but this will be changed soon.
// TODO: Link to issue to fix this.
//==============================================================

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// The input object sent when someone is creating a new review
type ReviewInput = {|
  stars: number,
  commentary: ?string,
  favorite_color: ?ColorInput,
|};

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`Flow codeGeneration multiple files 5`] = `"__generated__/ReviewMovie.js"`;

exports[`Flow codeGeneration multiple files 6`] = `
"

// ====================================================
// GraphQL mutation operation: ReviewMovie
// ====================================================

export type ReviewMovie_createReview = {|
  __typename: \\"Review\\",
  stars: number,       // The number of stars this review gave, 1-5
  commentary: ?string, // Comment about the movie
|};

export type ReviewMovie = {|
  createReview: ReviewMovie_createReview
|};

//==============================================================
// START Enums and Input Objects
// All enums and input objects are included in every output file
// for now, but this will be changed soon.
// TODO: Link to issue to fix this.
//==============================================================

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// The input object sent when someone is creating a new review
type ReviewInput = {|
  stars: number,
  commentary: ?string,
  favorite_color: ?ColorInput,
|};

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`Flow codeGeneration multiple files 7`] = `"/some/file/__generated__/someFragment.js"`;

exports[`Flow codeGeneration multiple files 8`] = `
"

// ====================================================
// GraphQL fragment: someFragment
// ====================================================

export type someFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  appearsIn: (?Episode)[], // The movies this character appears in
|};

//==============================================================
// START Enums and Input Objects
// All enums and input objects are included in every output file
// for now, but this will be changed soon.
// TODO: Link to issue to fix this.
//==============================================================

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// The input object sent when someone is creating a new review
type ReviewInput = {|
  stars: number,
  commentary: ?string,
  favorite_color: ?ColorInput,
|};

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`Flow codeGeneration multiple files 9`] = `"/some/file/__generated__/enums.js"`;

exports[`Flow codeGeneration multiple files 10`] = `
"

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";"
`;

exports[`Flow codeGeneration multiple files 11`] = `"__generated__/enums.js"`;

exports[`Flow codeGeneration multiple files 12`] = `
"

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";"
`;

exports[`Flow codeGeneration multiple files 13`] = `"/some/file/__generated__/inputObjects.js"`;

exports[`Flow codeGeneration multiple files 14`] = `
"

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};"
`;

exports[`Flow codeGeneration multiple files 15`] = `"__generated__/inputObjects.js"`;

exports[`Flow codeGeneration multiple files 16`] = `
"

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};"
`;

exports[`Flow codeGeneration query with fragment spreads 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroFragment
// ====================================================

export type HeroFragment_hero = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
  id: string,   // The ID of the character
|};

export type HeroFragment = {|
  hero: HeroFragment_hero
|};

// ====================================================
// GraphQL fragment: simpleFragment
// ====================================================

export type simpleFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};"
`;

exports[`Flow codeGeneration simple fragment 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL fragment: SimpleFragment
// ====================================================

export type SimpleFragment = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
|};"
`;

exports[`Flow codeGeneration simple hero query 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// ====================================================
// GraphQL query operation: HeroName
// ====================================================

export type HeroName_hero = {|
  __typename: \\"Human\\" | \\"Droid\\",
  name: string, // The name of the character
  id: string,   // The ID of the character
|};

export type HeroName = {|
  hero: HeroName_hero
|};"
`;

exports[`Flow codeGeneration simple mutation 1`] = `
"

/* @flow */
// This file was automatically generated and should not be edited.

// The episodes in the Star Wars trilogy
export type Episode = \\"NEWHOPE\\" | \\"EMPIRE\\" | \\"JEDI\\";

// The input object sent when someone is creating a new review
type ReviewInput = {|
  stars: number,
  commentary: ?string,
  favorite_color: ?ColorInput,
|};

// The input object sent when passing in a color
type ColorInput = {|
  red: number,
  green: number,
  blue: number,
|};

// ====================================================
// GraphQL mutation operation: ReviewMovie
// ====================================================

export type ReviewMovie_createReview = {|
  __typename: \\"Review\\",
  stars: number,       // The number of stars this review gave, 1-5
  commentary: ?string, // Comment about the movie
|};

export type ReviewMovie = {|
  createReview: ReviewMovie_createReview
|};"
`;
