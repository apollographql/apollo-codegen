// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`arguments shows added arguments 1`] = `
"interface Node { 
  
  # ✔️ Notice ✔️
  id(id: ID!): String

}

type Query { 
  
  # ✔️ Notice ✔️
  hello(name: String): String

}

"
`;

exports[`arguments shows removed arguments 1`] = `
"
interface Node { 
  
  # ⚡ Warning ⚡
  id: String

}

type Query { 
  
  # ⚡ Warning ⚡
  hello: String

}

"
`;

exports[`deprecation changes deprecation additions 1`] = `
"enum SoLong { 
  
  # ⚡ Warning ⚡
  TWO @deprecated

  # ✔️ Notice ✔️
  ONE @deprecated(reason: \\"One is the loneliest number\\")

}

type Query { 
  
  # ⚡ Warning ⚡
  deprecated: String @deprecated

  # ✔️ Notice ✔️
  deprecatedWithReason: String @deprecated(reason: \\"Use field testcase instead\\")

}

"
`;

exports[`deprecation changes deprecation removals 1`] = `
"enum SoLong { 
  
  # ✔️ Notice ✔️
  TWO

}

type Query { 
  
  # ✔️ Notice ✔️
  deprecated: String

}

"
`;

exports[`fields shows notice for additions 1`] = `
"interface AddedInterface { 
  
  # ✔️ Notice ✔️
  firstName(arg: String): String

}

input AddedInput { 
  
  # ⚡ Warning ⚡
  firstName: String!

  # ✔️ Notice ✔️
  lastName: String

}

enum AddedEnum { 
  
  # ✔️ Notice ✔️
  TWO

}

type User { 
  
  # ✔️ Notice ✔️
  firstName: String!

}

"
`;

exports[`fields shows warning for removals 1`] = `
"interface AddedInterface { 
  
  # ⚡ Warning ⚡
  firstName(arg: String): String

}

input AddedInput { 
  
  # ⚡ Warning ⚡
  firstName: String!
  lastName: String

}

enum AddedEnum { 
  
  # ⚡ Warning ⚡
  TWO

}

type User { 
  
  # ⚡ Warning ⚡
  firstName: String!

}

"
`;

exports[`integration reports changes for a complex scenario 1`] = `
"type User { 
  
  # ✔️ Notice ✔️
  id: ID!
  firstName: String

}

type Query { 
  
  # ⚡ Warning ⚡
  hello: String!
  serverSideField: ServerField!

  # ✔️ Notice ✔️
  me: User

}

type RemovedType { }

type RemovedField { 
  
  # ⚡ Warning ⚡
  name: RemovedType

}

type ServerField { }

"
`;

exports[`interfaces reports adding multiple interface implementations 1`] = `
"type User implements Node & Person { }

"
`;

exports[`interfaces reports additiong of interface to object 1`] = `
"type User implements Node { }

"
`;

exports[`interfaces reports removal multiple of interface implementations 1`] = `
"type User implements Node { }

"
`;

exports[`interfaces reports removal of interface implementations 1`] = `
"type User { }

"
`;

exports[`kind changes arg changed kind 1`] = `
"
type Query { 
  
  # ⚡ Warning ⚡
  hello(id: String): String
  defaultVal(id: String = \\"2\\"): String

}

"
`;

exports[`kind changes field changed kind 1`] = `
"input Hello { 
  
  # ⚡ Warning ⚡
  hello: String!

}

type Query { 
  
  # ⚡ Warning ⚡
  hello: ID!

}

"
`;

exports[`kind changes type changed kind 1`] = `
"type ChangeType { }

"
`;

exports[`types shows added types 1`] = `
"union AddedUnion = User

interface AddedInterface { 
  
  # ✔️ Notice ✔️
  id: ID!

}

scalar AddedScalar

input AddedInput { 
  
  # ✔️ Notice ✔️
  id: ID!

}

enum AddedEnum { 
  
  # ✔️ Notice ✔️
  ONE

}

type AddedType { 
  
  # ✔️ Notice ✔️
  id: ID!

}

"
`;

exports[`types shows removed types 1`] = `
"union RemovedUnion = User

interface RemovedInterface { }

scalar RemovedScalar

input RemovedInput { }

enum RemovedEnum { }

type RemovedType { }

"
`;

exports[`unions type added from union 1`] = `
"union Client = User | Person

"
`;

exports[`unions type removed from union 1`] = `
"union Client = User

"
`;
